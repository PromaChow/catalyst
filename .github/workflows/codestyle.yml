name: codestyle
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: codestyle-and-docs
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - id: pip-cache
        name: get pip cache
        run:
          'python -c "from pip._internal.locations import USER_CACHE_DIR; print(''::set-output
          name=dir::'' + USER_CACHE_DIR)"

          '
      - id: measurement-4
        name: Record Measurement After get pip cache
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: get pip cache
          task: get-measurement
      - name: cache pip
        uses: actions/cache@v4
        with:
          key:
            ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('./requirements/requirements.txt')
            }}-${{ hashFiles('./requirements/requirements-dev.txt') }}
          path: ${{ steps.pip-cache.outputs.dir }}
          restore-keys: "${{ runner.os }}-${{ matrix.python-version }}-pip-

            "
      - name: cache pip contrib
        uses: actions/cache@v4
        with:
          key:
            ${{ runner.os }}-${{ matrix.python-version }}-pip-contrib-${{ hashFiles('./requirements/requirements-cv.txt')
            }}-${{ hashFiles('./requirements/requirements-ml.txt') }}-${{ hashFiles('./requirements/requirements-optuna.txt')
            }}
          path: ${{ steps.pip-cache.outputs.dir }}
          restore-keys:
            "${{ runner.os }}-${{ matrix.python-version }}-pip-contrib-

            "
      - name: cache pip loggers
        uses: actions/cache@v4
        with:
          key:
            ${{ runner.os }}-${{ matrix.python-version }}-pip-loggers-${{ hashFiles('./requirements/requirements-comet.txt')
            }}-${{ hashFiles('./requirements/requirements-mlflow.txt') }}-${{ hashFiles('./requirements/requirements-neptune.txt')
            }}-${{ hashFiles('./requirements/requirements-wandb.txt') }}
          path: ${{ steps.pip-cache.outputs.dir }}
          restore-keys:
            "${{ runner.os }}-${{ matrix.python-version }}-pip-loggers-

            "
      - name: install dependencies
        run: "# python -m pip install --upgrade --user pip

          pip install -r ./requirements/requirements.txt -r ./requirements/requirements-dev.txt
          -r ./requirements/requirements-cv.txt -r ./requirements/requirements-ml.txt
          -r ./requirements/requirements-optuna.txt -r ./requirements/requirements-comet.txt
          -r ./requirements/requirements-mlflow.txt -r ./requirements/requirements-neptune.txt
          -r ./requirements/requirements-wandb.txt -r ./requirements/requirements-profiler.txt

          python --version

          pip --version

          pip list

          "
        shell: bash
      - id: measurement-9
        name: Record Measurement After install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: install dependencies
          task: get-measurement
      - name: check codestyle
        run: "catalyst-check-codestyle --line-length 89

          make check-docs

          "
      - id: measurement-11
        name: Record Measurement After check codestyle
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: check codestyle
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
        python-version:
          - 3.7
      max-parallel: 4
    timeout-minutes: 30
  flake8-linter:
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    name: codestyle-reviewdog
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - id: pip-cache
        name: get pip cache
        run:
          'python -c "from pip._internal.locations import USER_CACHE_DIR; print(''::set-output
          name=dir::'' + USER_CACHE_DIR)"

          '
      - id: measurement-4
        name: Record Measurement After get pip cache
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: get pip cache
          task: get-measurement
      - name: cache pip
        uses: actions/cache@v4
        with:
          key:
            ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('./requirements/requirements.txt')
            }}-${{ hashFiles('./requirements/requirements-dev.txt') }}
          path: ${{ steps.pip-cache.outputs.dir }}
          restore-keys: "${{ runner.os }}-${{ matrix.python-version }}-pip-

            "
      - name: cache pip contrib
        uses: actions/cache@v4
        with:
          key:
            ${{ runner.os }}-${{ matrix.python-version }}-pip-contrib-${{ hashFiles('./requirements/requirements-cv.txt')
            }}-${{ hashFiles('./requirements/requirements-ml.txt') }}-${{ hashFiles('./requirements/requirements-optuna.txt')
            }}
          path: ${{ steps.pip-cache.outputs.dir }}
          restore-keys:
            "${{ runner.os }}-${{ matrix.python-version }}-pip-contrib-

            "
      - name: cache pip loggers
        uses: actions/cache@v4
        with:
          key:
            ${{ runner.os }}-${{ matrix.python-version }}-pip-loggers-${{ hashFiles('./requirements/requirements-comet.txt')
            }}-${{ hashFiles('./requirements/requirements-mlflow.txt') }}-${{ hashFiles('./requirements/requirements-neptune.txt')
            }}-${{ hashFiles('./requirements/requirements-wandb.txt') }}
          path: ${{ steps.pip-cache.outputs.dir }}
          restore-keys:
            "${{ runner.os }}-${{ matrix.python-version }}-pip-loggers-

            "
      - name: install dependencies
        run: "# python -m pip install --upgrade --user pip

          pip install -r ./requirements/requirements.txt -r ./requirements/requirements-dev.txt
          -r ./requirements/requirements-cv.txt -r ./requirements/requirements-ml.txt
          -r ./requirements/requirements-optuna.txt -r ./requirements/requirements-comet.txt
          -r ./requirements/requirements-mlflow.txt -r ./requirements/requirements-neptune.txt
          -r ./requirements/requirements-wandb.txt -r ./requirements/requirements-profiler.txt

          python --version

          pip --version

          pip list

          "
        shell: bash
      - id: measurement-9
        name: Record Measurement After install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: install dependencies
          task: get-measurement
      - name: install reviewdog
        run:
          "mkdir -p $HOME/bin && curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh|
          sh -s -- -b $HOME/bin

          echo ::add-path::$HOME/bin

          "
      - id: measurement-11
        name: Record Measurement After install reviewdog
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: install reviewdog
          task: get-measurement
      - env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        name: Run reviewdog
        run:
          "LINE_LENGTH=89 catalyst-codestyle-flake8 . | reviewdog -f=pep8 -reporter=github-pr-review

          "
      - id: measurement-13
        name: Record Measurement After Run reviewdog
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Run reviewdog
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - 3.9
      max-parallel: 4
    timeout-minutes: 30
