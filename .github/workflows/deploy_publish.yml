name: deploy-on-release
on:
  push:
    branches:
      - main

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v2
      - env:
          PYTORCH_TAG: ${{ matrix.pytorch }}
        if: ${{ matrix.catalyst_requirements == 'base' }}
        name: Publish Docker to Docker Hub (base)
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          dockerfile: docker/Dockerfile
          name: catalystteam/catalyst
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: ${{ github.event.release.tag_name }}-pytorch-${{ matrix.pytorch }}
          username: ${{ secrets.DOCKER_USERNAME }}
      - env:
          CATALYST_ALL: '1'
          PYTORCH_TAG: ${{ matrix.pytorch }}
        if: ${{ matrix.catalyst_requirements == 'all' }}
        name: Publish Docker to Docker Hub ([all])
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          dockerfile: docker/Dockerfile
          name: catalystteam/catalyst
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: ${{ github.event.release.tag_name }}-${{ matrix.catalyst_requirements
            }}-pytorch-${{ matrix.pytorch }}
          username: ${{ secrets.DOCKER_USERNAME }}
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      matrix:
        catalyst_requirements:
          - base
          - all
        pytorch:
          - 1.9.0-cuda11.1-cudnn8-devel
          - 1.8.1-cuda11.1-cudnn8-devel
          - 1.7.0-cuda11.0-cudnn8-devel
          - 1.3-cuda10.1-cudnn7-devel
  build-docs:
    name: build-docs
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v2
      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: setup ubuntu
        run: 'python -c "from pip._internal.locations import USER_CACHE_DIR; print(''::set-output
          name=dir::'' + USER_CACHE_DIR)"

          '
      - id: measurement-4
        name: Record Measurement After setup ubuntu
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: setup ubuntu
          task: get-measurement
      - id: pip-cache
        name: get pip cache
        run: 'python -c "from pip._internal.locations import USER_CACHE_DIR; print(''::set-output
          name=dir::'' + USER_CACHE_DIR)"

          '
      - id: measurement-6
        name: Record Measurement After get pip cache
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: get pip cache
          task: get-measurement
      - name: cache pip
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('./requirements/requirements.txt')
            }}-${{ hashFiles('./requirements/requirements-dev.txt') }}
          path: ${{ steps.pip-cache.outputs.dir }}
          restore-keys: '${{ runner.os }}-${{ matrix.python-version }}-pip-

            '
      - name: cache pip contrib
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-contrib-${{ hashFiles('./requirements/requirements-cv.txt')
            }}-${{ hashFiles('./requirements/requirements-ml.txt') }}-${{ hashFiles('./requirements/requirements-optuna.txt')
            }}
          path: ${{ steps.pip-cache.outputs.dir }}
          restore-keys: '${{ runner.os }}-${{ matrix.python-version }}-pip-contrib-

            '
      - name: cache pip loggers
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-loggers-${{ hashFiles('./requirements/requirements-comet.txt')
            }}-${{ hashFiles('./requirements/requirements-mlflow.txt') }}-${{ hashFiles('./requirements/requirements-neptune.txt')
            }}-${{ hashFiles('./requirements/requirements-wandb.txt') }}
          path: ${{ steps.pip-cache.outputs.dir }}
          restore-keys: '${{ runner.os }}-${{ matrix.python-version }}-pip-loggers-

            '
      - name: install dependencies
        run: '# python -m pip install --upgrade --user pip

          pip install -r ./requirements/requirements.txt -r ./requirements/requirements-dev.txt
          -r ./requirements/requirements-cv.txt -r ./requirements/requirements-ml.txt
          -r ./requirements/requirements-optuna.txt -r ./requirements/requirements-comet.txt
          -r ./requirements/requirements-mlflow.txt -r ./requirements/requirements-neptune.txt
          -r ./requirements/requirements-wandb.txt -r ./requirements/requirements-profiler.txt

          python --version

          pip --version

          pip list

          '
        shell: bash
      - id: measurement-11
        name: Record Measurement After install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: install dependencies
          task: get-measurement
      - name: make docs
        run: 'REMOVE_BUILDS=0 make check-docs

          '
      - id: measurement-13
        name: Record Measurement After make docs
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: make docs
          task: get-measurement
      - env:
          TAG: ${{ github.event.release.tag_name }}
        name: commit documentation changes
        run: 'git clone https://github.com/catalyst-team/catalyst.git --branch gh-pages
          --single-branch gh-pages

          cd gh-pages

          cp -a ../builds "${{ github.event.release.tag_name }}"

          # add link to new version into `versions.html`

          master_version_link=''<li class="toctree-l1"><a class="reference internal"
          href="index.html">master<\/a><\/li>''

          new_version_link="\        <li class=\"toctree-l1\"><a class=\"reference
          internal\" href=\"${TAG}/index.html\">${TAG}<\/a><\/li>"

          sed -i "/${master_version_link}/a ${new_version_link}" versions.html

          # commit changes

          git config --local user.email "action@ithub.com"

          git config --local user.name "GitHub Action"

          git add .

          git commit -m "${TAG:=update docs}" || true

          '
      - id: measurement-15
        name: Record Measurement After commit documentation changes
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: commit documentation changes
          task: get-measurement
      - name: push changes
        uses: ad-m/github-push-action@master
        with:
          TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
          branch: gh-pages
          directory: gh-pages
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
        python-version:
          - 3.6
        requires:
          - latest
      max-parallel: 4
    timeout-minutes: 30
  build-pypi:
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v2
      - name: set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      matrix:
        python-version:
          - 3.7
