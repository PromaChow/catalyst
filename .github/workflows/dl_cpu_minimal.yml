name: catalyst_minimal
on:
  push:
    branches:
      - main

jobs:
  build:
    name: dl-cpu
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v2
      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - if: ${{ startsWith(runner.os, 'macOS') }}
        name: Setup macOS
        run: 'brew install libomp

          brew install gnu-sed

          '
      - id: measurement-4
        name: Record Measurement After Setup macOS
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Setup macOS
          task: get-measurement
      - if: ${{ matrix.requirements == 'minimal' }}
        name: set minimal dependencies
        run: 'python -c "req = open(''./requirements/requirements.txt'').read().replace(''>'',
          ''='') ; open(''./requirements/requirements.txt'', ''w'').write(req)"

          python -c "req = open(''./requirements/requirements-cv.txt'').read().replace(''>'',
          ''='') ; open(''./requirements/requirements-cv.txt'', ''w'').write(req)"

          python -c "req = open(''./requirements/requirements-ml.txt'').read().replace(''>'',
          ''='') ; open(''./requirements/requirements-ml.txt'', ''w'').write(req)"

          python -c "req = open(''./requirements/requirements-optuna.txt'').read().replace(''>'',
          ''='') ; open(''./requirements/requirements-optuna.txt'', ''w'').write(req)"

          python -c "req = open(''./requirements/requirements-comet.txt'').read().replace(''>'',
          ''='') ; open(''./requirements/requirements-comet.txt'', ''w'').write(req)"

          python -c "req = open(''./requirements/requirements-mlflow.txt'').read().replace(''>'',
          ''='') ; open(''./requirements/requirements-mlflow.txt'', ''w'').write(req)"

          python -c "req = open(''./requirements/requirements-neptune.txt'').read().replace(''>'',
          ''='') ; open(''./requirements/requirements-neptune.txt'', ''w'').write(req)"

          python -c "req = open(''./requirements/requirements-wandb.txt'').read().replace(''>'',
          ''='') ; open(''./requirements/requirements-wandb.txt'', ''w'').write(req)"

          python -c "req = open(''./requirements/requirements-profiler.txt'').read().replace(''>'',
          ''='') ; open(''./requirements/requirements-profiler.txt'', ''w'').write(req)"

          '
      - id: measurement-6
        name: Record Measurement After set minimal dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: set minimal dependencies
          task: get-measurement
      - id: pip-cache
        name: get pip cache
        run: 'python -c "from pip._internal.locations import USER_CACHE_DIR; print(''::set-output
          name=dir::'' + USER_CACHE_DIR)"

          '
      - id: measurement-8
        name: Record Measurement After get pip cache
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: get pip cache
          task: get-measurement
      - name: cache pip
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requirements
            }}-pip-${{ hashFiles('./requirements/requirements.txt') }}-${{ hashFiles('./requirements/requirements-dev.txt')
            }}
          path: ${{ steps.pip-cache.outputs.dir }}
          restore-keys: '${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requirements
            }}-pip-

            '
      - name: cache pip contrib
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requirements
            }}-pip-contrib-${{ hashFiles('./requirements/requirements-cv.txt') }}-${{
            hashFiles('./requirements/requirements-ml.txt') }}-${{ hashFiles('./requirements/requirements-optuna.txt')
            }}
          path: ${{ steps.pip-cache.outputs.dir }}
          restore-keys: '${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requirements
            }}-pip-contrib-

            '
      - name: cache pip loggers
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requirements
            }}-pip-loggers-${{ hashFiles('./requirements/requirements-comet.txt')
            }}-${{ hashFiles('./requirements/requirements-mlflow.txt') }}-${{ hashFiles('./requirements/requirements-neptune.txt')
            }}-${{ hashFiles('./requirements/requirements-wandb.txt') }}
          path: ${{ steps.pip-cache.outputs.dir }}
          restore-keys: '${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.requirements
            }}-pip-loggers-

            '
      - name: install dependencies
        run: '# python -m pip install --upgrade --user pip

          pip install -r ./requirements/requirements.txt -r ./requirements/requirements-dev.txt
          -r ./requirements/requirements-cv.txt -r ./requirements/requirements-ml.txt
          -r ./requirements/requirements-optuna.txt -r ./requirements/requirements-comet.txt
          -r ./requirements/requirements-mlflow.txt -r ./requirements/requirements-neptune.txt
          -r ./requirements/requirements-wandb.txt -r ./requirements/requirements-profiler.txt

          python --version

          pip --version

          pip list

          '
        shell: bash
      - id: measurement-13
        name: Record Measurement After install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: install dependencies
          task: get-measurement
      - env:
          MKL_NUM_THREADS: '1'
          OMP_NUM_THREADS: '1'
          REQUIREMENTS: ${{ matrix.requirements }}
        name: check examples
        run: 'pip install -e . --no-deps

          PYTHONPATH="${PYTHONPATH}:." CPU_REQUIRED="1" CONFIGS_REQUIRED="1" CATALYST_COMPUTE_PER_CLASS_METRICS="1"
          OMP_NUM_THREADS="1" MKL_NUM_THREADS="1" pytest .

          '
      - id: measurement-15
        name: Record Measurement After check examples
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: check examples
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      fail-fast: false
      matrix:
        exclude:
          - python-version: 3.9
            requirements: minimal
          - python-version: 3.1
            requirements: minimal
          - os: macOS-10.15
            python-version: 3.7
            requirements: minimal
          - os: macOS-10.15
            python-version: 3.8
            requirements: minimal
        os:
          - ubuntu-18.04
          - ubuntu-20.04
          - macOS-10.15
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
        requirements:
          - minimal
      max-parallel: 4
    timeout-minutes: 60
